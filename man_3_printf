.\" Automatically generated by Pandoc 2.5
.\"
.TH "_PRINTF" "1" "" "_printf 1.0.0" ""
.hy
.SH _printf \[en] Linux manual page
.SS NAME
.PP
_printf
.SS SYNOPSIS
.PP
#include \[lq]holberton.h\[rq] int _printf(const char *format, \&...)
.SS DESCRIPTION
.PP
_printf function can do the basic functionality of the original printf
function, that is, printing the format string.
This includes printing normal characters given in the string and
optional arguments within the format string, as printing chars, strings
and integers using the format specifier (%) and the corresponding letter
(%c for chars, %d or %i for integers and %s for strings).
For more information about the original printf, do man printf.
.SS Format of the format string
.PP
The format string is a character string.
It is composed by normal chars, and optional \[lq]format
specifiers\[rq], which are introduced by the character %, followed by a
letter, which are referred as Conversion specifiers (e.g %d).
.SS Conversion specifiers
.PP
This is a list of the Conversion specifiers enable to use with this
version of _printf: d, i: Prints any integer from INT_MIN to INT_MAX.
x, X: Prints an integer in hexadecimal.
X is for printing the alphabetical part in uppercase, and the x is for
lowercase.
c: Prints a char.
s: Prints a string.
p: Prints an address in memory.
%: Prints a single % character.
b: prints an unsigned integer in binary.
R: prints a string in rot13 format.
r: prints a string in reverse.
.SS RETURN VALUE
.PP
If the function successfully works, it returns the number of chars
printed.
If the % character is followed by a nul character `\[rs]0', the return
value is \-1, even when it printed other chars.
.SS EXAMPLES
.PP
To print 98 as binary:
.PP
#include \[lq]holberton.h\[rq] _printf(\[lq]%b\[rq], 98);
.PP
To print a character, a % character and a string:
.PP
#include \[lq]holberton.h\[rq] _printf(\[lq]%c, %%, %s\[rq], `a',
\[lq]Hello world\[rq]);
.PP
To print a test in reverse and another in rot13 format:
.PP
#include \[lq]holberton.h\[rq] _printf(\[lq]%r, %R\[rq],
\[lq]Hello\[rq], \[lq]World);
.SS AUTHORS
.PP
Juan Sebastian Gonzalez and Juan Sebastian Perea
